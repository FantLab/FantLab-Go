// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1-devel
// 	protoc        v3.11.4
// source: proto/edition.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TODO Список взят из main.cfg; если он изменится в основном репозитории, здесь тоже придется дорабатывать
// https://github.com/parserpro/fantlab/blob/2933533d76806584d52533b6026b8a3411193732/config/main.cfg#L283-L299
type EditionType int32

const (
	EditionType_EDITION_TYPE_UNKNOWN EditionType = 0
	// Авторская книга
	EditionType_EDITION_TYPE_AUTHOR_BOOK EditionType = 1
	// Авторский сборник
	EditionType_EDITION_TYPE_AUTHOR_COMPILATION EditionType = 2
	// Сборник
	EditionType_EDITION_TYPE_COMPILATION EditionType = 3
	// Антология
	EditionType_EDITION_TYPE_ANTHOLOGY EditionType = 4
	// Хрестоматия
	EditionType_EDITION_TYPE_CHRESTOMATHY EditionType = 5
	// Журнал
	EditionType_EDITION_TYPE_MAGAZINE EditionType = 6
	// Фэнзин
	EditionType_EDITION_TYPE_FANZINE EditionType = 7
	// Альманах
	EditionType_EDITION_TYPE_ALMANAC EditionType = 8
	// Газета
	EditionType_EDITION_TYPE_NEWSPAPER EditionType = 9
	// Аудиокнига
	EditionType_EDITION_TYPE_AUDIOBOOK EditionType = 10
	// Иллюстрированный альбом
	EditionType_EDITION_TYPE_ILLUSTRATED_ALBUM EditionType = 11
	// Диафильм
	EditionType_EDITION_TYPE_FILM_STRIP EditionType = 12
)

// Enum value maps for EditionType.
var (
	EditionType_name = map[int32]string{
		0:  "EDITION_TYPE_UNKNOWN",
		1:  "EDITION_TYPE_AUTHOR_BOOK",
		2:  "EDITION_TYPE_AUTHOR_COMPILATION",
		3:  "EDITION_TYPE_COMPILATION",
		4:  "EDITION_TYPE_ANTHOLOGY",
		5:  "EDITION_TYPE_CHRESTOMATHY",
		6:  "EDITION_TYPE_MAGAZINE",
		7:  "EDITION_TYPE_FANZINE",
		8:  "EDITION_TYPE_ALMANAC",
		9:  "EDITION_TYPE_NEWSPAPER",
		10: "EDITION_TYPE_AUDIOBOOK",
		11: "EDITION_TYPE_ILLUSTRATED_ALBUM",
		12: "EDITION_TYPE_FILM_STRIP",
	}
	EditionType_value = map[string]int32{
		"EDITION_TYPE_UNKNOWN":            0,
		"EDITION_TYPE_AUTHOR_BOOK":        1,
		"EDITION_TYPE_AUTHOR_COMPILATION": 2,
		"EDITION_TYPE_COMPILATION":        3,
		"EDITION_TYPE_ANTHOLOGY":          4,
		"EDITION_TYPE_CHRESTOMATHY":       5,
		"EDITION_TYPE_MAGAZINE":           6,
		"EDITION_TYPE_FANZINE":            7,
		"EDITION_TYPE_ALMANAC":            8,
		"EDITION_TYPE_NEWSPAPER":          9,
		"EDITION_TYPE_AUDIOBOOK":          10,
		"EDITION_TYPE_ILLUSTRATED_ALBUM":  11,
		"EDITION_TYPE_FILM_STRIP":         12,
	}
)

func (x EditionType) Enum() *EditionType {
	p := new(EditionType)
	*p = x
	return p
}

func (x EditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_edition_proto_enumTypes[0].Descriptor()
}

func (EditionType) Type() protoreflect.EnumType {
	return &file_proto_edition_proto_enumTypes[0]
}

func (x EditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditionType.Descriptor instead.
func (EditionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_edition_proto_rawDescGZIP(), []int{0}
}

type EditionCorrectnessLevel int32

const (
	EditionCorrectnessLevel_EDITION_CORRECTNESS_LEVEL_UNKNOWN EditionCorrectnessLevel = 0
	// Издание проверено
	EditionCorrectnessLevel_EDITION_CORRECTNESS_LEVEL_GREEN EditionCorrectnessLevel = 1
	// Издание требует верификации
	EditionCorrectnessLevel_EDITION_CORRECTNESS_LEVEL_ORANGE EditionCorrectnessLevel = 2
	// Издание не проверено
	EditionCorrectnessLevel_EDITION_CORRECTNESS_LEVEL_RED EditionCorrectnessLevel = 3
)

// Enum value maps for EditionCorrectnessLevel.
var (
	EditionCorrectnessLevel_name = map[int32]string{
		0: "EDITION_CORRECTNESS_LEVEL_UNKNOWN",
		1: "EDITION_CORRECTNESS_LEVEL_GREEN",
		2: "EDITION_CORRECTNESS_LEVEL_ORANGE",
		3: "EDITION_CORRECTNESS_LEVEL_RED",
	}
	EditionCorrectnessLevel_value = map[string]int32{
		"EDITION_CORRECTNESS_LEVEL_UNKNOWN": 0,
		"EDITION_CORRECTNESS_LEVEL_GREEN":   1,
		"EDITION_CORRECTNESS_LEVEL_ORANGE":  2,
		"EDITION_CORRECTNESS_LEVEL_RED":     3,
	}
)

func (x EditionCorrectnessLevel) Enum() *EditionCorrectnessLevel {
	p := new(EditionCorrectnessLevel)
	*p = x
	return p
}

func (x EditionCorrectnessLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditionCorrectnessLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_edition_proto_enumTypes[1].Descriptor()
}

func (EditionCorrectnessLevel) Type() protoreflect.EnumType {
	return &file_proto_edition_proto_enumTypes[1]
}

func (x EditionCorrectnessLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditionCorrectnessLevel.Descriptor instead.
func (EditionCorrectnessLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_edition_proto_rawDescGZIP(), []int{1}
}

var File_proto_edition_proto protoreflect.FileDescriptor

var file_proto_edition_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x8b, 0x03, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x23, 0x0a,
	0x1f, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x49, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x49, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x4e, 0x54, 0x48, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19,
	0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x52,
	0x45, 0x53, 0x54, 0x4f, 0x4d, 0x41, 0x54, 0x48, 0x59, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x45,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x47, 0x41,
	0x5a, 0x49, 0x4e, 0x45, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x4e, 0x5a, 0x49, 0x4e, 0x45, 0x10, 0x07,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x4c, 0x4d, 0x41, 0x4e, 0x41, 0x43, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x57, 0x53, 0x50,
	0x41, 0x50, 0x45, 0x52, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x42, 0x4f, 0x4f, 0x4b,
	0x10, 0x0a, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4c, 0x4c, 0x55, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41,
	0x4c, 0x42, 0x55, 0x4d, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49,
	0x50, 0x10, 0x0c, 0x2a, 0xae, 0x01, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x25, 0x0a, 0x21, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45,
	0x43, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x45,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x4e, 0x45,
	0x53, 0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0x02, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x52,
	0x52, 0x45, 0x43, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x52,
	0x45, 0x44, 0x10, 0x03, 0x42, 0x0c, 0x5a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_edition_proto_rawDescOnce sync.Once
	file_proto_edition_proto_rawDescData = file_proto_edition_proto_rawDesc
)

func file_proto_edition_proto_rawDescGZIP() []byte {
	file_proto_edition_proto_rawDescOnce.Do(func() {
		file_proto_edition_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_edition_proto_rawDescData)
	})
	return file_proto_edition_proto_rawDescData
}

var file_proto_edition_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_edition_proto_goTypes = []interface{}{
	(EditionType)(0),             // 0: EditionType
	(EditionCorrectnessLevel)(0), // 1: EditionCorrectnessLevel
}
var file_proto_edition_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_edition_proto_init() }
func file_proto_edition_proto_init() {
	if File_proto_edition_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_edition_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_edition_proto_goTypes,
		DependencyIndexes: file_proto_edition_proto_depIdxs,
		EnumInfos:         file_proto_edition_proto_enumTypes,
	}.Build()
	File_proto_edition_proto = out.File
	file_proto_edition_proto_rawDesc = nil
	file_proto_edition_proto_goTypes = nil
	file_proto_edition_proto_depIdxs = nil
}
